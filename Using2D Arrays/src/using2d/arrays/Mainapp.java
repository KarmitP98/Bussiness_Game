/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package using2d.arrays;

import java.awt.event.KeyEvent;
import java.util.ArrayList;

/**
 *
 * @author karmi
 */
public class Mainapp extends javax.swing.JFrame
  {

    /**
     * Creates new form Mainapp
     */
    public Mainapp()
      {
        initComponents();
      }
    ArrayList name = new ArrayList(100);
    int students = 0, marks = 0, x = 0, y = 0, z = 0;
    float[][] m = new float[100][100];
    float[] sum = new float[1000], avg = new float[1000];
    String sname;
    String[] str = new String[100];
    float sumc, avgc;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        input = new javax.swing.JTextField();
        list = new javax.swing.JButton();
        m1 = new javax.swing.JLabel();
        m2 = new javax.swing.JLabel();
        m3 = new javax.swing.JLabel();
        m4 = new javax.swing.JLabel();
        marks1 = new javax.swing.JTextField();
        marks2 = new javax.swing.JTextField();
        marks3 = new javax.swing.JTextField();
        marks4 = new javax.swing.JTextField();
        baklol = new javax.swing.JLabel();
        ave = new javax.swing.JButton();
        avedisplay = new javax.swing.JLabel();
        display = new javax.swing.JScrollPane();
        disps = new javax.swing.JTextArea();
        exit = new javax.swing.JButton();
        studentavg = new javax.swing.JButton();
        student = new javax.swing.JLabel();
        stavg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Rosewood Std Regular", 3, 54)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Student marksheet");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Name:");

        input.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        input.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                inputFocusGained(evt);
            }
        });
        input.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                inputMouseClicked(evt);
            }
        });
        input.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                inputKeyPressed(evt);
            }
        });

        list.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        list.setText("Class List");
        list.setEnabled(false);
        list.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                listMouseClicked(evt);
            }
        });

        m1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        m1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        m1.setText("English:");

        m2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        m2.setText("Gujarati:");

        m3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        m3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        m3.setText("Hindi:");

        m4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        m4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        m4.setText("Sanskrit:");

        marks1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        marks1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        marks1.setText("---");
        marks1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        marks1.setEnabled(false);
        marks1.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                marks1FocusGained(evt);
            }
        });
        marks1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                marks1MouseClicked(evt);
            }
        });
        marks1.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                marks1KeyPressed(evt);
            }
        });

        marks2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        marks2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        marks2.setText("---");
        marks2.setEnabled(false);
        marks2.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                marks2FocusGained(evt);
            }
        });
        marks2.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                marks2MouseClicked(evt);
            }
        });
        marks2.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                marks2KeyPressed(evt);
            }
        });

        marks3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        marks3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        marks3.setText("---");
        marks3.setEnabled(false);
        marks3.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                marks3FocusGained(evt);
            }
        });
        marks3.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                marks3MouseClicked(evt);
            }
        });
        marks3.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                marks3KeyPressed(evt);
            }
        });

        marks4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        marks4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        marks4.setText("---");
        marks4.setEnabled(false);
        marks4.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                marks4FocusGained(evt);
            }
        });
        marks4.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                marks4MouseClicked(evt);
            }
        });
        marks4.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                marks4KeyPressed(evt);
            }
        });

        baklol.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        baklol.setEnabled(false);

        ave.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ave.setText("Class Average");
        ave.setEnabled(false);
        ave.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                aveMouseClicked(evt);
            }
        });

        avedisplay.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        avedisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        avedisplay.setEnabled(false);

        disps.setColumns(20);
        disps.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        disps.setRows(5);
        disps.setEnabled(false);
        display.setViewportView(disps);

        exit.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exitActionPerformed(evt);
            }
        });

        studentavg.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        studentavg.setText("Student Average");
        studentavg.setEnabled(false);
        studentavg.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                studentavgMouseClicked(evt);
            }
        });

        student.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        student.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        student.setEnabled(false);

        stavg.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        stavg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stavg.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(m1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m2)
                    .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(marks1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(marks2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(marks3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(marks4, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(baklol, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(avedisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(studentavg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(student, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stavg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(jLabel2)
                                .addGap(4, 4, 4)
                                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(list)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(display)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(exit)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(list))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ave)
                            .addComponent(studentavg))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(avedisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(student, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(stavg, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(baklol, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(m1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(m2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(m4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(marks1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(marks2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(marks3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(marks4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(30, 30, 30)
                .addComponent(display, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(exit)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputMouseClicked
        //Making Input area clear when the input text field is clicked
        input.setText(null);
        marks1.setText("---");
        marks2.setText("---");
        marks3.setText("---");
        marks4.setText("---");
        baklol.setText("");
    }//GEN-LAST:event_inputMouseClicked

    private void inputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputKeyPressed
        //Takes in the input from the input textfield and save it into a arraylist
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
          {
            students++;
            name.add(input.getText());
            input.setEnabled(false);
            
            marks1.setEnabled(true);
            marks2.setEnabled(true);
            marks3.setEnabled(true);
            marks4.setEnabled(true);
            checker();
          }
    }//GEN-LAST:event_inputKeyPressed

    private void marks1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_marks1MouseClicked
    }//GEN-LAST:event_marks1MouseClicked

    private void marks1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marks1KeyPressed
        //Adding marks to the array
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
          {
            if (marks1.getText().isEmpty() == true)
              {
                marks++;
                marks1.setText("0");
                marks1.setEnabled(false);
                m[students][marks] = 0;
                checker();
              } else
              {
                marks++;
                m[students][marks] = Float.parseFloat(marks1.getText());
                marks1.setEnabled(false);
                checker();
              }
            if (marks == 4)
              {
                printavg(students);
                checker();
              }

          }
    }//GEN-LAST:event_marks1KeyPressed

    private void marks2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marks2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
          {
            if (marks2.getText().isEmpty() == true)
              {
                marks++;
                marks2.setText("0");
                marks2.setEnabled(false);
                m[students][marks] = 0;
                checker();
              } else
              {
                marks++;
                m[students][marks] = Float.parseFloat(marks2.getText());
                marks2.setEnabled(false);
                checker();
              }
            if (marks == 4)
              {
                printavg(students);
                checker();
              }
          }
    }//GEN-LAST:event_marks2KeyPressed

    private void marks3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marks3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
          {
            if (marks3.getText().isEmpty() == true)
              {
                marks++;
                marks3.setText("0");
                marks3.setEnabled(false);
                m[students][marks] = 0;
                checker();
              } else
              {
                marks++;
                m[students][marks] = Float.parseFloat(marks3.getText());
                marks3.setEnabled(false);
                checker();
              }
            if (marks == 4)
              {
                printavg(students);
                checker();
              }
          }
    }//GEN-LAST:event_marks3KeyPressed

    private void marks4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marks4KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
          {
            if (marks4.getText().isEmpty() == true)
              {
                marks++;
                marks4.setText("0");
                marks4.setEnabled(false);
                m[students][marks] = 0;
                checker();
              } else
              {
                marks++;
                m[students][marks] = Float.parseFloat(marks4.getText());
                marks4.setEnabled(false);
                checker();
              }
            if (marks == 4)
              {
                printavg(students);
                checker();
              }
          }
    }//GEN-LAST:event_marks4KeyPressed

    private void marks2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_marks2MouseClicked
    }//GEN-LAST:event_marks2MouseClicked

    private void marks3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_marks3MouseClicked
    }//GEN-LAST:event_marks3MouseClicked

    private void marks4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_marks4MouseClicked
    }//GEN-LAST:event_marks4MouseClicked

    private void aveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aveMouseClicked
        disps.append("\nClass average is " + avedisplay.getText());
    }//GEN-LAST:event_aveMouseClicked

    private void inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputFocusGained
    }//GEN-LAST:event_inputFocusGained

    private void marks1FocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_marks1FocusGained
    {//GEN-HEADEREND:event_marks1FocusGained
        marks1.setText(null);
        baklol.setText("<html> Press Enter <br> if no marks!!");
    }//GEN-LAST:event_marks1FocusGained

    private void marks2FocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_marks2FocusGained
    {//GEN-HEADEREND:event_marks2FocusGained
        marks2.setText(null);
        baklol.setText("<html> Press Enter <br> if no marks!!");
    }//GEN-LAST:event_marks2FocusGained

    private void marks3FocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_marks3FocusGained
    {//GEN-HEADEREND:event_marks3FocusGained
        marks3.setText(null);
        baklol.setText("<html> Press Enter <br> if no marks!!");
    }//GEN-LAST:event_marks3FocusGained

    private void marks4FocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_marks4FocusGained
    {//GEN-HEADEREND:event_marks4FocusGained
        marks4.setText(null);
        baklol.setText("<html> Press Enter <br> if no marks!!");
    }//GEN-LAST:event_marks4FocusGained

    private void listMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_listMouseClicked
    {//GEN-HEADEREND:event_listMouseClicked
        if (name.size() > 0)
          {
            disps.setText("\n******Student List******\n");
            disps.append("No.\t Name.\tEnglish.\tGujarati.\tHindi.\tSanskrit.\tTotal.\tAverage.\n");
            for (x = 1; x <= students; x++)
              {
                disps.append(x + ".\t" + name.get(x - 1) + "\t");
                for (y = 1; y <= 4; y++)
                  {
                    disps.append(m[x][y] + "\t");                    
                  }
                disps.append(sum[x] + "\t" + avg[x] + "\n");
              }
          } else
          {
            disps.setText("<html><h1>Please Enter Atleast One Name!!!</h1></html>");
          }
    }//GEN-LAST:event_listMouseClicked

    private void studentavgMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_studentavgMouseClicked
    {//GEN-HEADEREND:event_studentavgMouseClicked
        if (input.getText().isEmpty() == true)
          {
            disps.setText("Please enter the name of the student!!!");
          } else if (name.contains(input.getText()))
          {
            sumavg();
            System.out.println("found");
            for (x = 1; x < students; x++)
              {
                if (name.get(x)==input.getText())
                  {
                    disps.append("\n" + name.get(x) + "'s Average in all subjects is " + avg[x]);
                  }                
              }

          } else if (name.contains(input.getText()) == false)
          {
            for (x = 1; x < students; x++)
              {
                if (input.getText().equalsIgnoreCase((String) name.get(x)) == true)
                  {
                    disps.append("\nWe did not find any names like this but we found:\n");
                    disps.append(name.get(x) + "\n");
                  } else
                  {
                    System.out.println("not found");
                    disps.setText("No name found!!!");
                  }
              }
          }
    }//GEN-LAST:event_studentavgMouseClicked

    private void exitActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exitActionPerformed
    {//GEN-HEADEREND:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    public void printavg(int x)
      {
        sumavg();
        avedisplay.setText(avgc + "");
        stuavg(x);
      }

    public void stuavg(int x)
      {
        student.setText(input.getText() + "'s average:");
        stavg.setText(avg[x] + "");
        renable();
      }

    public void sumavg()
      {
        sumc=0;
        avgc=0;
        for (x = 1; x <= students; x++)
          {
            for (y = 1; y <= 4; y++)
              {
                sum[x] += m[x][y];
                sumc += m[x][y];
              }            
            
                avg[x] = sum[x] / 4;
          }
        avgc = sumc / students;
      }

    public void renable()
      {
        input.setEnabled(true);
        marks1.setEnabled(true);
        marks2.setEnabled(true);
        marks3.setEnabled(true);
        marks4.setEnabled(true);
        marks = 0;
      }

    public void checker()
      {
        if (name.size() > 0)
          {
            list.setEnabled(true);
            ave.setEnabled(true);
            studentavg.setEnabled(true);
          } else
          {
            list.setEnabled(false);
            ave.setEnabled(false);
            studentavg.setEnabled(false);
          }
        if (marks == 4)
          {
            input.setEnabled(true);
            marks1.setEnabled(false);
            marks2.setEnabled(false);
            marks3.setEnabled(false);
            marks4.setEnabled(false);
            marks1.setText("---");
            marks2.setText("---");
            marks3.setText("---");
            marks4.setText("---");
            marks=0;
          }
        else if(marks>0&&marks<4)
          {
            list.setEnabled(false);
          }
      }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
      {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
          {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
              {
                if ("Nimbus".equals(info.getName()))
                  {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                  }
              }
          } catch (ClassNotFoundException ex)
          {
            java.util.logging.Logger.getLogger(Mainapp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (InstantiationException ex)
          {
            java.util.logging.Logger.getLogger(Mainapp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (IllegalAccessException ex)
          {
            java.util.logging.Logger.getLogger(Mainapp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (javax.swing.UnsupportedLookAndFeelException ex)
          {
            java.util.logging.Logger.getLogger(Mainapp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
          {
            public void run()
              {
                new Mainapp().setVisible(true);
              }
          });
      }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ave;
    private javax.swing.JLabel avedisplay;
    private javax.swing.JLabel baklol;
    private javax.swing.JScrollPane display;
    private javax.swing.JTextArea disps;
    private javax.swing.JButton exit;
    private javax.swing.JTextField input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton list;
    private javax.swing.JLabel m1;
    private javax.swing.JLabel m2;
    private javax.swing.JLabel m3;
    private javax.swing.JLabel m4;
    private javax.swing.JTextField marks1;
    private javax.swing.JTextField marks2;
    private javax.swing.JTextField marks3;
    private javax.swing.JTextField marks4;
    private javax.swing.JLabel stavg;
    private javax.swing.JLabel student;
    private javax.swing.JButton studentavg;
    // End of variables declaration//GEN-END:variables
}
