/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package choosing.application;

import static choosing.application.Childplay.msg;
import static choosing.application.Gamemode2.ab;
import static choosing.application.Gamemode2.bb;
import static choosing.application.Gamemode2.cb;
import static choosing.application.Gamemode2.db;
import static choosing.application.Gamemode2.dp;
import static choosing.application.Gamemode2.eb;
import static choosing.application.Gamemode2.fb;
import static choosing.application.Gamemode2.gb;
import static choosing.application.Gamemode2.hb;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author karmi
 */
public class Gamemode2_1 extends javax.swing.JFrame {

    public static ArrayList nums = new ArrayList();
    public static int s, x, count = 0, c1, c2, card1, card2, temp, left = 16, counter = 100, looper = 0;
    public static int[] t = new int[200], change = new int[100];
    public static ImageIcon a = new ImageIcon("src\\choosing\\application\\Dale Steyn.png");
    public static ImageIcon b = new ImageIcon("src\\choosing\\application\\Rahul Dravid.png");
    public static ImageIcon c = new ImageIcon("src\\choosing\\application\\Ashwin.png");
    public static ImageIcon d = new ImageIcon("src\\choosing\\application\\Sachin.png");
    public static ImageIcon e = new ImageIcon("src\\choosing\\application\\Ravindra Jadeja.png");
    public static ImageIcon f = new ImageIcon("src\\choosing\\application\\Virat.png");
    public static ImageIcon g = new ImageIcon("src\\choosing\\application\\MSD.png");
    public static ImageIcon h = new ImageIcon("src\\choosing\\application\\Yuvi.png");
    public static ImageIcon ic = new ImageIcon();
    public static ImageIcon done = new ImageIcon("src\\choosing\\application\\cardout.jpg");
    public static ImageIcon back = new ImageIcon("src\\choosing\\application\\cardback.jpg");
    public static ImageIcon nop = new ImageIcon("src\\choosing\\application\\cardbackred.jpg");
    public static Timer ti;
    public static ImageIcon ab = new ImageIcon("src\\choosing\\application\\fire.png");
    public static ImageIcon bb = new ImageIcon("src\\choosing\\application\\Rahul Dravidback.jpg");
    public static ImageIcon cb = new ImageIcon("src\\choosing\\application\\Ashwinback.jpg");
    public static ImageIcon db = new ImageIcon("src\\choosing\\application\\Sachinback.jpg");
    public static ImageIcon eb = new ImageIcon("src\\choosing\\application\\Jadejaback.jpg");
    public static ImageIcon fb = new ImageIcon("src\\choosing\\application\\Viratback.jpg");
    public static ImageIcon gb = new ImageIcon("src\\choosing\\application\\Dhoniback.jpg");
    public static ImageIcon hb = new ImageIcon("src\\choosing\\application\\Yuviback.jpg");
    public static ImageIcon dp = new ImageIcon();

    /**
     * Creates new form Gamemode2
     */
    public Gamemode2_1() {
        initComponents();
        Toolkit tk = Toolkit.getDefaultToolkit();
        int sizeh = (int) tk.getScreenSize().getHeight();
        int sizew = (int) tk.getScreenSize().getWidth();
        this.setSize(sizew, sizeh);
        this.setAlwaysOnTop(true);
        this.setState(MAXIMIZED_BOTH);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        p1 = new javax.swing.JButton();
        p2 = new javax.swing.JButton();
        p3 = new javax.swing.JButton();
        p4 = new javax.swing.JButton();
        p5 = new javax.swing.JButton();
        p6 = new javax.swing.JButton();
        p7 = new javax.swing.JButton();
        p8 = new javax.swing.JButton();
        p9 = new javax.swing.JButton();
        p10 = new javax.swing.JButton();
        p11 = new javax.swing.JButton();
        p12 = new javax.swing.JButton();
        p13 = new javax.swing.JButton();
        p14 = new javax.swing.JButton();
        p15 = new javax.swing.JButton();
        p16 = new javax.swing.JButton();
        check = new javax.swing.JButton();
        ga = new javax.swing.JButton();
        ex = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        timeprint = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(Gamemode2.MAXIMIZED_BOTH);

        p1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p1.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p1.setMaximumSize(new java.awt.Dimension(110, 115));
        p1.setMinimumSize(new java.awt.Dimension(105, 105));
        p1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                p1MouseReleased(evt);
            }
        });
        p1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p1ActionPerformed(evt);
            }
        });

        p2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p2.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p2.setMaximumSize(new java.awt.Dimension(110, 115));
        p2.setMinimumSize(new java.awt.Dimension(105, 105));
        p2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                p2MouseReleased(evt);
            }
        });
        p2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p2ActionPerformed(evt);
            }
        });

        p3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p3.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p3.setMaximumSize(new java.awt.Dimension(110, 115));
        p3.setMinimumSize(new java.awt.Dimension(105, 105));
        p3.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p3ActionPerformed(evt);
            }
        });

        p4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p4.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p4.setMaximumSize(new java.awt.Dimension(110, 115));
        p4.setMinimumSize(new java.awt.Dimension(105, 105));
        p4.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p4ActionPerformed(evt);
            }
        });

        p5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p5.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p5.setMaximumSize(new java.awt.Dimension(110, 115));
        p5.setMinimumSize(new java.awt.Dimension(105, 105));
        p5.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p5ActionPerformed(evt);
            }
        });

        p6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p6.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p6.setMaximumSize(new java.awt.Dimension(110, 115));
        p6.setMinimumSize(new java.awt.Dimension(105, 105));
        p6.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p6ActionPerformed(evt);
            }
        });

        p7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p7.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p7.setMaximumSize(new java.awt.Dimension(110, 115));
        p7.setMinimumSize(new java.awt.Dimension(105, 105));
        p7.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p7ActionPerformed(evt);
            }
        });

        p8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p8.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p8.setMaximumSize(new java.awt.Dimension(110, 115));
        p8.setMinimumSize(new java.awt.Dimension(105, 105));
        p8.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p8ActionPerformed(evt);
            }
        });

        p9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p9.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p9.setMaximumSize(new java.awt.Dimension(110, 115));
        p9.setMinimumSize(new java.awt.Dimension(105, 105));
        p9.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p9ActionPerformed(evt);
            }
        });

        p10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p10.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p10.setMaximumSize(new java.awt.Dimension(110, 115));
        p10.setMinimumSize(new java.awt.Dimension(105, 105));
        p10.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p10ActionPerformed(evt);
            }
        });

        p11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p11.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p11.setMaximumSize(new java.awt.Dimension(110, 115));
        p11.setMinimumSize(new java.awt.Dimension(105, 105));
        p11.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p11ActionPerformed(evt);
            }
        });

        p12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p12.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p12.setMaximumSize(new java.awt.Dimension(110, 115));
        p12.setMinimumSize(new java.awt.Dimension(105, 105));
        p12.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p12ActionPerformed(evt);
            }
        });

        p13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p13.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p13.setMaximumSize(new java.awt.Dimension(110, 115));
        p13.setMinimumSize(new java.awt.Dimension(105, 105));
        p13.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p13ActionPerformed(evt);
            }
        });

        p14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p14.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p14.setMaximumSize(new java.awt.Dimension(110, 115));
        p14.setMinimumSize(new java.awt.Dimension(105, 105));
        p14.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p14ActionPerformed(evt);
            }
        });

        p15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p15.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p15.setMaximumSize(new java.awt.Dimension(110, 115));
        p15.setMinimumSize(new java.awt.Dimension(105, 105));
        p15.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p15ActionPerformed(evt);
            }
        });

        p16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        p16.setMargin(new java.awt.Insets(1, 1, 1, 1));
        p16.setMaximumSize(new java.awt.Dimension(110, 115));
        p16.setMinimumSize(new java.awt.Dimension(105, 105));
        p16.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        p16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p16ActionPerformed(evt);
            }
        });

        check.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        check.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/checknpr.jpg"))); // NOI18N
        check.setToolTipText("");
        check.setEnabled(false);
        check.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/Checkprs.jpg"))); // NOI18N
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        ga.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ga.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/Guessagainnpr.jpg"))); // NOI18N
        ga.setEnabled(false);
        ga.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/Guessagainprs.jpg"))); // NOI18N
        ga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gaActionPerformed(evt);
            }
        });

        ex.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ex.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/Exitnpr.jpg"))); // NOI18N
        ex.setToolTipText("");
        ex.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/Exitprs.jpg"))); // NOI18N
        ex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Stencil", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cricket Champion");

        timeprint.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ga, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ex, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(p3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(p4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(p5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(p6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(p7, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(p8, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(p9, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(p10, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(p11, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(p12, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(p13, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(p14, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(p15, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(p16, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 37, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(timeprint, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p5, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p6, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p7, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p8, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p9, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p10, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p11, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p12, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p13, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p14, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p15, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p16, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(timeprint, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ga, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ex, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void p1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p1ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[0];
            iconsetter(temp);
            p1.setDisabledIcon(ic);

            count++;
            if (count == 1) {
                c1 = temp;
                change[0] = 0;

            } else if (count == 2) {
                c2 = temp;
                change[0] = 0;

            }
            p1.setEnabled(false);
            countcheck();
            System.out.println("p1" + count + c1 + c2);
        } else {
            p1.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p1ActionPerformed

    private void p2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p2ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[1];
            iconsetter(temp);
            p2.setDisabledIcon(ic);

            count++;
            if (count == 1) {
                c1 = temp;
                change[1] = 0;
            } else if (count == 2) {
                c2 = temp;
                change[1] = 0;
            }
            p2.setEnabled(false);
            countcheck();
            System.out.println("p2" + count + c1 + c2);
        } else {
            p2.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p2ActionPerformed

    private void p3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p3ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[2];
            iconsetter(temp);
            p3.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[2] = 0;
            } else if (count == 2) {
                c2 = temp;
                change[2] = 0;
            }
            p3.setEnabled(false);
            countcheck();
            System.out.println("p3" + count + c1 + c2);
        } else {
            p3.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p3ActionPerformed

    private void p4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p4ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[3];
            iconsetter(temp);
            p4.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[3] = 0;
            } else {
                c2 = temp;
                change[3] = 0;

            }
            p4.setEnabled(false);
            countcheck();
            System.out.println("p4" + count + c1 + c2);
        } else {
            p4.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p4ActionPerformed

    private void p5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p5ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[4];
            iconsetter(temp);
            p5.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[4] = 0;
            } else {
                c2 = temp;
                change[4] = 0;

            }
            System.out.println("p5" + count + c1 + c2);
            countcheck();
            p5.setEnabled(false);
        } else {
            p5.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p5ActionPerformed

    private void p6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p6ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[5];
            iconsetter(temp);
            p6.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[5] = 0;
            } else {
                c2 = temp;
                change[5] = 0;

            }
            p6.setEnabled(false);
            countcheck();
            System.out.println("p6" + count + c1 + c2);
        } else {
            p6.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p6ActionPerformed

    private void p7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p7ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[6];
            iconsetter(temp);
            p7.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[6] = 0;
            } else {
                c2 = temp;
                change[6] = 0;

            }
            p7.setEnabled(false);
            countcheck();
            System.out.println("p7" + count + c1 + c2);
        } else {
            p7.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p7ActionPerformed

    private void p8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p8ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[7];
            iconsetter(temp);
            p8.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[7] = 0;
            } else {
                c2 = temp;
                change[7] = 0;

            }
            p8.setEnabled(false);
            countcheck();
            System.out.println("p8" + count + c1 + c2);
        } else {
            p8.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p8ActionPerformed

    private void p9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p9ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[8];
            iconsetter(temp);
            p9.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[8] = 0;
            } else {
                c2 = temp;
                change[8] = 0;
            }
            p9.setEnabled(false);
            countcheck();
            System.out.println("p9" + count + c1 + c2);
        } else {
            p9.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p9ActionPerformed

    private void p10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p10ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[9];
            iconsetter(temp);
            p10.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[9] = 0;
            } else {
                c2 = temp;
                change[9] = 0;
            }
            p10.setEnabled(false);
            countcheck();
            System.out.println("p10" + count + c1 + c2);
        } else {
            p10.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p10ActionPerformed

    private void p11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p11ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[10];
            iconsetter(temp);
            p11.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[10] = 0;
            } else {
                c2 = temp;
                change[10] = 0;
            }
            p11.setEnabled(false);
            countcheck();
            System.out.println("p11" + count + c1 + c2);
        } else {
            p11.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p11ActionPerformed

    private void p12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p12ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[11];
            iconsetter(temp);
            p12.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[11] = 0;
            } else {
                c2 = temp;
                change[11] = 0;
            }
            p12.setEnabled(false);
            countcheck();
            System.out.println("p12" + count + c1 + c2);
        } else {
            p12.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p12ActionPerformed

    private void p13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p13ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[12];
            iconsetter(temp);
            p13.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[12] = 0;
            } else {
                c2 = temp;
                change[12] = 0;
            }
            p13.setEnabled(false);
            countcheck();
            System.out.println("p13" + count + c1 + c2);
        } else {
            p13.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p13ActionPerformed

    private void p14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p14ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[13];
            iconsetter(temp);
            p14.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[13] = 0;
            } else {
                c2 = temp;
                change[13] = 0;
            }
            p14.setEnabled(false);
            countcheck();
            System.out.println("p14" + count + c1 + c2);
        } else {
            p14.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p14ActionPerformed

    private void p15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p15ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[14];
            iconsetter(temp);
            p15.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[14] = 0;
            } else {
                c2 = temp;
                change[14] = 0;
            }
            p15.setEnabled(false);
            countcheck();
            System.out.println("p15" + count + c1 + c2);
        } else {
            p15.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p15ActionPerformed

    private void p16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p16ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            temp = t[15];
            iconsetter(temp);
            p16.setDisabledIcon(ic);
            count++;
            if (count == 1) {
                c1 = temp;
                change[15] = 0;
            } else {
                c2 = temp;
                change[15] = 0;
            }
            p16.setEnabled(false);
            countcheck();
            System.out.println("p16" + count + c1 + c2);
        } else {
            p16.setPressedIcon(nop);
        }
    }//GEN-LAST:event_p16ActionPerformed

    private void p1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p1MouseReleased
    }//GEN-LAST:event_p1MouseReleased

    private void p2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p2MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_p2MouseReleased

    private void exActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exActionPerformed

    private void gaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gaActionPerformed
        p1.setIcon(back);
        p2.setIcon(back);
        p3.setIcon(back);
        p4.setIcon(back);
        p5.setIcon(back);
        p6.setIcon(back);
        p7.setIcon(back);
        p8.setIcon(back);
        p9.setIcon(back);
        p10.setIcon(back);
        p12.setIcon(back);
        p11.setIcon(back);
        p13.setIcon(back);
        p14.setIcon(back);
        p15.setIcon(back);
        p16.setIcon(back);
        startup();

        int dab;
        for (dab = 0; dab <= 20; dab++) {
            change[dab] = dab + 4;
        }
        nums.clear();
        c1 = 3;
        c2 = 3;
        count = 0;

        MissionSelect n = new MissionSelect();
        n.start();
        ti.stop();
    }//GEN-LAST:event_gaActionPerformed

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed

        if (count == 2) {
            if (c1 == c2) {
                for (int y = 1; y <= 2; y++) {
                    if (change[0] == 0) {
                        temp = t[0];
                        backsetter(temp);
                        p1.setDisabledIcon(dp);
                        p1.setEnabled(false);
                        change[0] = 2;
                    } else if (change[1] == 0) {
                        temp = t[1];
                        backsetter(temp);
                        p2.setEnabled(false);
                        p2.setDisabledIcon(dp);
                        change[1] = 2;
                    } else if (change[2] == 0) {
                        temp = t[2];
                        backsetter(temp);
                        p3.setEnabled(false);
                        p3.setDisabledIcon(dp);
                        change[2] = 2;
                    } else if (change[3] == 0) {
                        temp = t[3];
                        backsetter(temp);
                        p4.setEnabled(false);
                        p4.setDisabledIcon(dp);
                        change[3] = 2;
                    } else if (change[4] == 0) {
                        temp = t[4];
                        backsetter(temp);
                        p5.setEnabled(false);
                        p5.setDisabledIcon(dp);
                        change[4] = 2;
                    } else if (change[5] == 0) {
                        temp = t[5];
                        backsetter(temp);
                        p6.setEnabled(false);
                        p6.setDisabledIcon(dp);
                        change[5] = 2;
                    } else if (change[6] == 0) {
                        temp = t[6];
                        backsetter(temp);
                        p7.setEnabled(false);
                        p7.setDisabledIcon(dp);
                        change[6] = 2;
                    } else if (change[7] == 0) {
                        temp = t[7];
                        backsetter(temp);
                        p8.setEnabled(false);
                        p8.setDisabledIcon(dp);
                        change[7] = 2;
                    } else if (change[8] == 0) {
                        temp = t[8];
                        backsetter(temp);
                        p9.setEnabled(false);
                        p9.setDisabledIcon(dp);
                        change[8] = 2;
                    } else if (change[9] == 0) {
                        temp = t[9];
                        backsetter(temp);
                        p10.setEnabled(false);
                        p10.setDisabledIcon(dp);
                        change[9] = 2;
                    } else if (change[10] == 0) {
                        temp = t[10];
                        backsetter(temp);
                        p11.setEnabled(false);
                        p11.setDisabledIcon(dp);
                        change[10] = 2;
                    } else if (change[11] == 0) {
                        temp = t[11];
                        backsetter(temp);
                        p12.setEnabled(false);
                        p12.setDisabledIcon(dp);
                        change[11] = 2;
                    } else if (change[12] == 0) {
                        temp = t[12];
                        backsetter(temp);
                        p13.setEnabled(false);
                        p13.setDisabledIcon(dp);
                        change[12] = 2;
                    } else if (change[13] == 0) {
                        temp = t[13];
                        backsetter(temp);
                        p14.setEnabled(false);
                        p14.setDisabledIcon(dp);
                        change[13] = 2;
                    } else if (change[14] == 0) {
                        temp = t[14];
                        backsetter(temp);
                        p15.setEnabled(false);
                        p15.setDisabledIcon(dp);
                        change[14] = 2;
                    } else if (change[15] == 0) {
                        temp = t[15];
                        backsetter(temp);
                        p16.setEnabled(false);
                        p16.setDisabledIcon(dp);
                        change[15] = 2;
                    }
                    System.out.println("Found");
                }
                left = left - 2;
            } else {
                for (int y = 1; y <= 2; y++) {
                    if (change[0] == 0) {

                        p1.setIcon(back);
                        p1.setEnabled(true);
                        change[0] = 1;
                    } else if (change[1] == 0) {

                        p2.setIcon(back);
                        p2.setEnabled(true);
                        change[1] = 1;
                    } else if (change[2] == 0) {

                        p3.setIcon(back);
                        p3.setEnabled(true);
                        change[2] = 1;
                    } else if (change[3] == 0) {

                        p4.setIcon(back);
                        p4.setEnabled(true);
                        change[3] = 1;
                    } else if (change[4] == 0) {

                        p5.setIcon(back);
                        p5.setEnabled(true);
                        change[4] = 1;
                    } else if (change[5] == 0) {

                        p6.setIcon(back);
                        p6.setEnabled(true);
                        change[5] = 1;
                    } else if (change[6] == 0) {

                        p7.setIcon(back);
                        p7.setEnabled(true);
                        change[6] = 1;
                    } else if (change[7] == 0) {

                        p8.setIcon(back);
                        p8.setEnabled(true);
                        change[7] = 1;
                    } else if (change[8] == 0) {

                        p9.setIcon(back);
                        p9.setEnabled(true);
                        change[8] = 1;
                    } else if (change[9] == 0) {

                        p10.setIcon(back);
                        p10.setEnabled(true);
                        change[9] = 1;
                    } else if (change[10] == 0) {

                        p11.setIcon(back);
                        p11.setEnabled(true);
                        change[10] = 1;
                    } else if (change[11] == 0) {

                        p12.setIcon(back);
                        p12.setEnabled(true);
                        change[11] = 1;
                    } else if (change[12] == 0) {

                        p13.setIcon(back);
                        p13.setEnabled(true);
                        change[12] = 1;
                    } else if (change[13] == 0) {

                        p14.setIcon(back);
                        p14.setEnabled(true);
                        change[13] = 1;
                    } else if (change[14] == 0) {

                        p15.setIcon(back);
                        p15.setEnabled(true);
                        change[14] = 1;
                    } else if (change[15] == 0) {

                        p16.setIcon(back);
                        p16.setEnabled(true);
                        change[15] = 1;
                    }
                    System.out.println("Not Found");
                }
            }

            count = 0;

            if (left == 0) {
                try {
                    ti.stop();
                    ImageIcon i = new ImageIcon("tick_64.png");
                    JOptionPane.showMessageDialog(rootPane, "Well Played!!! Try other Modes!!", "Awesome", JOptionPane.INFORMATION_MESSAGE, i);
                    Thread.sleep(2000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Childplay.class.getName()).log(Level.SEVERE, null, ex);
                }
                new MissionSelect().start();
            }
        }
        countcheck();
    }//GEN-LAST:event_checkActionPerformed

    public ImageIcon iconsetter(int temp) {
        switch (temp) {
            case 0:
                ic = a;
                break;
            case 1:
                ic = b;
                break;
            case 2:
                ic = c;
                break;
            case 3:
                ic = d;
                break;
            case 4:
                ic = e;
                break;
            case 5:
                ic = f;
                break;
            case 6:
                ic = g;
                break;
            case 7:
                ic = h;
                break;
        }
        return ic;
    }

    public ImageIcon backsetter(int temp) {
        switch (temp) {
            case 0:
                dp = ab;
                break;
            case 1:
                dp = bb;
                break;
            case 2:
                dp = cb;
                break;
            case 3:
                dp = db;
                break;
            case 4:
                dp = eb;
                break;
            case 5:
                dp = fb;
                break;
            case 6:
                dp = gb;
                break;
            case 7:
                dp = hb;
                break;
        }
        return dp;
    }

    public void cooldown() {
        p1.setEnabled(false);
        p2.setEnabled(false);
        p3.setEnabled(false);
        p4.setEnabled(false);
        p5.setEnabled(false);
        p6.setEnabled(false);
        p7.setEnabled(false);
        p8.setEnabled(false);
        p9.setEnabled(false);
        p10.setEnabled(false);
        p11.setEnabled(false);
        p12.setEnabled(false);
        p13.setEnabled(false);
        p14.setEnabled(false);
        p15.setEnabled(false);
        p16.setEnabled(false);
    }

    public void startup() {
        p1.setEnabled(true);
        p2.setEnabled(true);
        p3.setEnabled(true);
        p4.setEnabled(true);
        p5.setEnabled(true);
        p6.setEnabled(true);
        p7.setEnabled(true);
        p8.setEnabled(true);
        p9.setEnabled(true);
        p10.setEnabled(true);
        p11.setEnabled(true);
        p12.setEnabled(true);
        p13.setEnabled(true);
        p14.setEnabled(true);
        p15.setEnabled(true);
        p16.setEnabled(true);
    }

    public void countcheck() {
        if (count == 0 || count == 1) {
            check.setEnabled(false);
        } else {
            check.setEnabled(true);
        }
    }

    public void timings() {
        msg.add("Good Try! Play Again!");
        msg.add("It was close!! Play Again!");
        msg.add("Getting Better! Play Again!");
        msg.add("Well Tried! Play Again!");
        msg.add("Really Awesome! Play Again!");
        Collections.shuffle(msg);
        ga.setEnabled(true);
        ga.setEnabled(true);
        ti = new Timer(200, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                counter--;
                timeprint.setText("Time Left: " + counter);
                System.out.println(timeprint.getText());
                if (counter == 0) {
                    try {
                        JOptionPane.showMessageDialog(rootPane, msg.get(0));
                        Thread.sleep(2000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Gamemode2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    ti.stop();
                    String[] args = null;
                    Gamemode3.main(args);
                }
            }
        });
        ti.start();
    }

    public void assignment() {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Gamemode2_1().setVisible(true);

            }
        });
        for (int y = 0; y < 2; y++) {
            for (x = 0; x < 8; x++) {
                nums.add(x);
            }
        }
        int dab;
        for (dab = 0; dab <= 20; dab++) {
            change[dab] = dab + 4;
        }

        Collections.shuffle(nums);

        for (x = 0; x <= 15; x++) {
            t[x] = (int) nums.get(x);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gamemode2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>       
        Gamemode3 g = new Gamemode3();
        Gamemode3.main(args);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton check;
    private javax.swing.JButton ex;
    private javax.swing.JButton ga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton p1;
    private javax.swing.JButton p10;
    private javax.swing.JButton p11;
    private javax.swing.JButton p12;
    private javax.swing.JButton p13;
    private javax.swing.JButton p14;
    private javax.swing.JButton p15;
    private javax.swing.JButton p16;
    private javax.swing.JButton p2;
    private javax.swing.JButton p3;
    private javax.swing.JButton p4;
    private javax.swing.JButton p5;
    private javax.swing.JButton p6;
    private javax.swing.JButton p7;
    private javax.swing.JButton p8;
    private javax.swing.JButton p9;
    private javax.swing.JLabel timeprint;
    // End of variables declaration//GEN-END:variables
}
