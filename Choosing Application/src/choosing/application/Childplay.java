/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this anolate file, choose Tools | Templates
 * and open the anolate in the editor.
 */
package choosing.application;

import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author karmi
 */
public class Childplay extends javax.swing.JFrame {

    public static int ano = 0, count = 0, c1, c2, left = 8, x, counter, looper = 0;
    public static int[] c = new int[8], change = new int[8];
    public static ArrayList nums = new ArrayList();
    public static ArrayList msg = new ArrayList();
    public static ImageIcon d = new ImageIcon("src\\choosing\\application\\Sachin.png");
    public static ImageIcon e = new ImageIcon("src\\choosing\\application\\Rahul Dravid.png");
    public static ImageIcon f = new ImageIcon("src\\choosing\\application\\Virat.png");
    public static ImageIcon g = new ImageIcon("src\\choosing\\application\\MSD.png");
    public static ImageIcon pc = new ImageIcon();
    public static ImageIcon done = new ImageIcon("src\\choosing\\application\\cardout.jpg");
    public static ImageIcon back = new ImageIcon("src\\choosing\\application\\cardback.jpg");
    public static Timer t;
    public static ImageIcon nop = new ImageIcon("src\\choosing\\application\\cardbackred.jpg");
    public static ImageIcon db = new ImageIcon("src\\choosing\\application\\Sachinback.jpg");
    public static ImageIcon eb = new ImageIcon("src\\choosing\\application\\Rahul Dravidback.jpg");
    public static ImageIcon fb = new ImageIcon("src\\choosing\\application\\Viratback.jpg");
    public static ImageIcon gb = new ImageIcon("src\\choosing\\application\\Dhoniback.jpg");
    public static ImageIcon ic = new ImageIcon();

    /**
     * Creates new form Childplay
     */
    public Childplay() {
        initComponents();
        Toolkit tk = Toolkit.getDefaultToolkit();
        int sizeh = (int) tk.getScreenSize().getHeight();
        int sizew = (int) tk.getScreenSize().getWidth();
        this.setSize(sizew, sizeh);
        this.setAlwaysOnTop(true);
        this.setState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        check = new javax.swing.JButton();
        guessagain = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        time = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(Childplay.MAXIMIZED_BOTH);
        setName("Childs Play"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Stencil", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Guessing Game");

        check.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        check.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/checknpr.jpg"))); // NOI18N
        check.setEnabled(false);
        check.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/Checkprs.jpg"))); // NOI18N
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        guessagain.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        guessagain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/Guessagainnpr.jpg"))); // NOI18N
        guessagain.setEnabled(false);
        guessagain.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/Guessagainprs.jpg"))); // NOI18N
        guessagain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessagainActionPerformed(evt);
            }
        });

        exit.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/Exitnpr.jpg"))); // NOI18N
        exit.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/Exitprs.jpg"))); // NOI18N
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        b1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        b1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        b2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        b3.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        b4.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        b5.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        b6.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        b7.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardback.jpg"))); // NOI18N
        b8.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/choosing/application/cardbackprs.jpg"))); // NOI18N
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        time.setFont(new java.awt.Font("Stencil", 1, 24)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(guessagain, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guessagain, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed

        if (count == 2) {
            if (c1 == c2) {
                for (int y = 1; y <= 2; y++) {
                    if (change[0] == 0) {
                        ano = c[0];
                        backsetter(ano, 0);
                        b1.setDisabledIcon(ic);
                        b1.setEnabled(false);
                        change[0] = 2;
                    } else if (change[1] == 0) {
                        b2.setEnabled(false);
                        ano = c[1];
                        backsetter(ano, 1);
                        b2.setDisabledIcon(ic);
                        change[1] = 2;
                    } else if (change[2] == 0) {
                        b3.setEnabled(false);
                        ano = c[2];
                        backsetter(ano, 2);
                        b3.setDisabledIcon(ic);
                        change[2] = 2;
                    } else if (change[3] == 0) {
                        b4.setEnabled(false);
                        ano = c[3];
                        backsetter(ano, 3);
                        b4.setDisabledIcon(ic);
                        change[3] = 2;
                    } else if (change[4] == 0) {
                        b5.setEnabled(false);
                        ano = c[4];
                        backsetter(ano, 4);
                        b5.setDisabledIcon(ic);
                        change[4] = 2;
                    } else if (change[5] == 0) {
                        b6.setEnabled(false);
                        ano = c[5];
                        backsetter(ano, 5);
                        b6.setDisabledIcon(ic);
                        change[5] = 2;
                    } else if (change[6] == 0) {
                        b7.setEnabled(false);
                        ano = c[6];
                        backsetter(ano, 6);
                        b7.setDisabledIcon(ic);
                        change[6] = 2;
                    } else if (change[7] == 0) {
                        b8.setEnabled(false);
                        ano = c[7];
                        backsetter(ano, 7);
                        b8.setDisabledIcon(ic);
                        change[7] = 2;
                    }
                    System.out.println("Found");
                }
                left = left - 2;
            } else {
                for (int y = 1; y <= 2; y++) {
                    if (change[0] == 0) {

                        b1.setIcon(back);
                        b1.setEnabled(true);
                        change[0] = 1;
                    } else if (change[1] == 0) {

                        b2.setIcon(back);
                        b2.setEnabled(true);
                        change[1] = 1;
                    } else if (change[2] == 0) {

                        b3.setIcon(back);
                        b3.setEnabled(true);
                        change[2] = 1;
                    } else if (change[3] == 0) {

                        b4.setIcon(back);
                        b4.setEnabled(true);
                        change[3] = 1;
                    } else if (change[4] == 0) {

                        b5.setIcon(back);
                        b5.setEnabled(true);
                        change[4] = 1;
                    } else if (change[5] == 0) {

                        b6.setIcon(back);
                        b6.setEnabled(true);
                        change[5] = 1;
                    } else if (change[6] == 0) {

                        b7.setIcon(back);
                        b7.setEnabled(true);
                        change[6] = 1;
                    } else if (change[7] == 0) {

                        b8.setIcon(back);
                        b8.setEnabled(true);
                        change[7] = 1;
                    }
                    System.out.println("Not Found");
                }
            }

            count = 0;

            if (left == 0) {
                try {
                    t.stop();
                    ImageIcon i = new ImageIcon("tick_64.png");
                    JOptionPane well = new JOptionPane();
                    JOptionPane.showMessageDialog(rootPane, "Well Played!!! Try other Modes!!", "Awesome", JOptionPane.INFORMATION_MESSAGE, i);
                    Thread.sleep(2000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Childplay.class.getName()).log(Level.SEVERE, null, ex);
                }
                MissionSelect n = new MissionSelect();
                n.start();
            }
        }
        countcheck();
    }//GEN-LAST:event_checkActionPerformed

    private void guessagainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessagainActionPerformed
        b1.setIcon(back);
        b2.setIcon(back);
        b3.setIcon(back);
        b4.setIcon(back);
        b5.setIcon(back);
        b6.setIcon(back);
        b7.setIcon(back);
        b8.setIcon(back);
        startup();

        int dab;
        for (dab = 0; dab <= 7; dab++) {
            change[dab] = 1;
        }
        nums.clear();
        c1 = 3;
        c2 = 3;
        count = 0;
        t.stop();
        MissionSelect n = new MissionSelect();
        n.start();


    }//GEN-LAST:event_guessagainActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        t.stop();
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            ano = c[0];
            iconselector(ano);
            b1.setEnabled(false);
            b1.setDisabledIcon(pc);
            count++;
            if (count == 1) {
                c1 = ano;
                change[0] = 0;
            } else {
                c2 = ano;
                change[0] = 0;
            }
            countcheck();
            System.out.println("p1" + count + c1 + c2);
        } else {
            b1.setPressedIcon(nop);
        }
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            ano = c[1];
            iconselector(ano);
            b2.setEnabled(false);
            b2.setDisabledIcon(pc);
            count++;
            if (count == 1) {
                c1 = ano;
                change[1] = 0;
            } else {
                c2 = ano;
                change[1] = 0;
            }
            countcheck();
            System.out.println("p2" + count + c1 + c2);
        } else {
            b2.setPressedIcon(nop);
        }
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            ano = c[2];
            iconselector(ano);
            b3.setEnabled(false);
            b3.setDisabledIcon(pc);
            count++;
            if (count == 1) {
                c1 = ano;
                change[2] = 0;
            } else {
                c2 = ano;
                change[2] = 0;
            }
            countcheck();
            System.out.println("p3" + count + c1 + c2);
        } else {
            b3.setPressedIcon(nop);
        }
    }//GEN-LAST:event_b3ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            ano = c[3];
            iconselector(ano);
            b4.setEnabled(false);
            b4.setDisabledIcon(pc);
            count++;
            if (count == 1) {
                c1 = ano;
                change[3] = 0;
            } else {
                c2 = ano;
                change[3] = 0;
            }
            countcheck();
            System.out.println("p4" + count + c1 + c2);
        } else {
            b4.setPressedIcon(nop);
        }
    }//GEN-LAST:event_b4ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            ano = c[4];
            iconselector(ano);
            b5.setEnabled(false);
            b5.setDisabledIcon(pc);
            count++;
            if (count == 1) {
                c1 = ano;
                change[4] = 0;
            } else {
                c2 = ano;
                change[4] = 0;
            }
            countcheck();
            System.out.println("p5" + count + c1 + c2);
        } else {
            b5.setPressedIcon(nop);
        }
    }//GEN-LAST:event_b5ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            ano = c[5];
            iconselector(ano);
            b6.setEnabled(false);
            b6.setDisabledIcon(pc);
            count++;
            if (count == 1) {
                c1 = ano;
                change[5] = 0;
            } else {
                c2 = ano;
                change[5] = 0;
            }
            countcheck();
            System.out.println("p6" + count + c1 + c2 + pc);
        } else {
            b6.setPressedIcon(nop);
        }
    }//GEN-LAST:event_b6ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            ano = c[6];
            iconselector(ano);
            b7.setEnabled(false);
            b7.setDisabledIcon(pc);
            count++;
            if (count == 1) {
                c1 = ano;
                change[6] = 0;
            } else {
                c2 = ano;
                change[6] = 0;
            }
            countcheck();
            System.out.println("p7" + count + c1 + c2);
        } else {
            b7.setPressedIcon(nop);
        }
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        if (count < 2) {
            looper++;
            if (looper == 1) {
                timings();
            }
            ano = c[7];
            iconselector(ano);
            b8.setEnabled(false);
            b8.setDisabledIcon(pc);
            count++;
            if (count == 1) {
                c1 = ano;
                change[7] = 0;
            } else {
                c2 = ano;
                change[7] = 0;
            }
            countcheck();
            System.out.println("p8" + count + c[7] + c1 + c2);
        } else {
            b8.setPressedIcon(nop);
        }
    }//GEN-LAST:event_b8ActionPerformed

    public ImageIcon iconselector(int ano) {
        switch (ano) {
            case 0: {
                pc = d;
                break;
            }
            case 1: {
                pc = e;
                break;
            }
            case 2: {
                pc = f;
                break;
            }
            case 3: {
                pc = g;
                break;
            }
        }
        return pc;
    }

    public void cooldown() {
        b1.setEnabled(false);
        b2.setEnabled(false);
        b3.setEnabled(false);
        b4.setEnabled(false);
        b5.setEnabled(false);
        b6.setEnabled(false);
        b7.setEnabled(false);
        b8.setEnabled(false);
    }

    public void startup() {
        b1.setEnabled(true);
        b2.setEnabled(true);
        b3.setEnabled(true);
        b4.setEnabled(true);
        b5.setEnabled(true);
        b6.setEnabled(true);
        b7.setEnabled(true);
        b8.setEnabled(true);
    }

    public void countcheck() {
        if (count == 1 || count == 0) {
            check.setEnabled(false);
        } else {
            check.setEnabled(true);
        }
    }

    public void timings() {
        msg.add("Good Try! Play Again!");
        msg.add("It was close!! Play Again!");
        msg.add("Getting Better! Play Again!");
        msg.add("Well Tried! Play Again!");
        Collections.shuffle(msg);
        guessagain.setEnabled(true);
        t = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                counter--;
                time.setText("Time Left: " + counter);
                if (counter == 0) {
                    try {
                        JOptionPane.showMessageDialog(rootPane, msg.get(0));
                        Thread.sleep(2000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Gamemode2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    String[] args = null;
                    Gamemode3.main(args);
                }
            }
        });
        t.start();
    }

    public ImageIcon backsetter(int temp, int i) {
        switch (temp) {
            case 0: {
                ic = db;
                break;
            }
            case 1: {
                ic = eb;
                break;
            }
            case 2: {
                ic = fb;
                break;
            }
            case 3: {
                ic = gb;
                break;
            }
        }
        return ic;
    }

    public void assignment() {
        for (int y = 0; y < 2; y++) {
            for (x = 0; x < 4; x++) {
                nums.add(x);
            }
        }
        int dab;
        for (dab = 0; dab <= 7; dab++) {
            change[dab] = 5;
        }

        Collections.shuffle(nums);
        Collections.shuffle(nums);
        for (x = 0; x <= 7; x++) {
            c[x] = (int) nums.get(x);
            ano = c[x];
            iconselector(ano);
            System.out.println(x + " " + c[x] + " " + pc);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Childplay().setVisible(true);
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gamemode2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>       
        Gamemode3 g = new Gamemode3();
        Gamemode3.main(args);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton check;
    private javax.swing.JButton exit;
    private javax.swing.JButton guessagain;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel time;
    // End of variables declaration//GEN-END:variables
}
